# This is the configuration file shipped with the application that contains reasonable defaults.
# Environment specific configurations are configured in config/application.properties.
# If you are running in a servlet container you may add this to lib/config/application.properties in case you do not
# want to touch the WAR file.

 server.port=8081

spring.application.name=samplekafkaapplication
server.servlet.context-path=/

security.expose.error.details=false
security.cors.enabled=true
spring.jpa.hibernate.ddl-auto=validate

logging.level.root=INFO
debug=false
#logging.level.com.devonfw.module.kafka=DEBUG

# Datasource for accessing the database
# https://github.com/spring-projects/spring-boot/blob/d3c34ee3d1bfd3db4a98678c524e145ef9bca51c/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/jdbc/DatabaseDriver.java
spring.jpa.database=h2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#show sql values
#logging.level.org.hibernate.type.descriptor.sql=trace

# Hibernate NamingStrategy has been deprecated and then removed in favor of two step naming strategy ImplicitNamingStrategy and PhysicalNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# https://github.com/devonfw/devon4j/issues/65
# https://vladmihalcea.com/the-open-session-in-view-anti-pattern/
spring.jpa.open-in-view=false

# to prevent that Spring Boot launches batch jobs on startup
# might otherwise lead to errors if job parameters are needed (or lead to unwanted modifications and longer startup times)
# see http://stackoverflow.com/questions/22318907/how-to-stop-spring-batch-scheduled-jobs-from-running-at-first-time-when-executin
spring.batch.job.enabled=false

# Flyway for Database Setup and Migrations
spring.flyway.locations=classpath:db/migration,classpath:db/type/h2

# Kafka common properties
messaging.kafka.common.bootstrapServers=localhost:9092
#messaging.kafka.common.metadataMaxAgeMs=
#messaging.kafka.common.sendBufferBytes=
#messaging.kafka.common.receiveBufferBytes=
messaging.kafka.common.clientId=
#messaging.kafka.common.reconnectBackoffMs=
#messaging.kafka.common.reconnectBackoffMaxMs=
#messaging.kafka.common.retryBackoffMs=
#messaging.kafka.common.metricsSampleWindowMs=
#messaging.kafka.common.metricsNumSamples=
#messaging.kafka.common.metricsRecordingLevel=
#messaging.kafka.common.metricReporters=
#messaging.kafka.common.securityProtocol=
#messaging.kafka.common.sslKeystoreLocation=
#messaging.kafka.common.sslKeystorePassword=
#messaging.kafka.common.sslKeyPassword=
#messaging.kafka.common.sslTruststoreLocation=
#messaging.kafka.common.sslTruststorePassword=
#messaging.kafka.common.saslMechanism=
#messaging.kafka.common.username=
#messaging.kafka.common.password=
#messaging.kafka.common.connectionsMaxIdleMs=
#messaging.kafka.common.requestTimeoutMs=

# kafka health indicator properties
#management.endpoint.health.enabled=
#messaging.kafka.health.timeout=
messaging.kafka.health.topicsToCheck=employeeapp-employee-v1-delete,employeeapp-employee-v1-add

# Kafka producer properties
#messaging.kafka.producer.batchSize=
#messaging.kafka.producer.acks=
#messaging.kafka.producer.lingerMs=
#messaging.kafka.producer.maxRequestSize=
#messaging.kafka.producer.maxBlockMs=
#messaging.kafka.producer.bufferMemory=
#messaging.kafka.producer.compressionType=
#messaging.kafka.producer.maxInFlightRequestsPerConnection=
#messaging.kafka.producer.retries=
messaging.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
messaging.kafka.producer.valueSerializer=org.apache.kafka.common.serialization.StringSerializer
#messaging.kafka.producer.partitionerClass=
#messaging.kafka.producer.interceptorClasses=
#messaging.kafka.producer.enableIdempotence=
#messaging.kafka.producer.transactionTimeoutMs=
#messaging.kafka.producer.transactionalId=

# Message sender properties
#messaging.sender.defaultSendTimeoutSeconds=

# Kafka consumer properties
messaging.kafka.consumer.groupId=default
#messaging.kafka.consumer.maxPollRecords=
#messaging.kafka.consumer.maxPollIntervalMs=
#messaging.kafka.consumer.sessionTimeoutMs=
#messaging.kafka.consumer.heartbeatIntervalMs=
#messaging.kafka.consumer.enableAutoCommit=
#messaging.kafka.consumer.autoCommitIntervalMs=
#messaging.kafka.consumer.partitionAssignmentStrategy=
#messaging.kafka.consumer.autoOffsetReset=
#messaging.kafka.consumer.fetchMinBytes=
#messaging.kafka.consumer.fetchMaxBytes=
#messaging.kafka.consumer.fetchMaxWaitMs=
#messaging.kafka.consumer.maxPartitionFetchBytes=
#messaging.kafka.consumer.checkCrcs=
messaging.kafka.consumer.keyDeserializer=org.apache.kafka.common.serialization.StringDeserializer
messaging.kafka.consumer.valueDeserializer=org.apache.kafka.common.serialization.StringDeserializer
#messaging.kafka.consumer.interceptorClasses=
#messaging.kafka.consumer.excludeInternalTopics=
#messaging.kafka.consumer.isolationLevel=

# Kafka listener container properties
messaging.kafka.listener.container.concurrency=1
#messaging.kafka.listener.container.ackMode=
#messaging.kafka.listener.container.ackCount=
#messaging.kafka.listener.container.ackTime=
#messaging.kafka.listener.container.pollTimeout=
#messaging.kafka.listener.container.shutdownTimeout=
#messaging.kafka.listener.container.syncCommits=
#messaging.kafka.listener.container.ackOnError=
#messaging.kafka.listener.container.idleEventInterval=

# Back off policy properties for employeeapp-employee-v1-delete
messaging.retry.back-off-policy.retryReEnqueueDelay.employeeapp-employee-v1-delete=1000
messaging.retry.back-off-policy.retryDelay.employeeapp-employee-v1-delete=600000
messaging.retry.back-off-policy.retryDelayMultiplier.employeeapp-employee-v1-delete=1.0
messaging.retry.back-off-policy.retryMaxDelay.employeeapp-employee-v1-delete=600000
messaging.retry.back-off-policy.retryCount.employeeapp-employee-v1-delete=2

# Retry policy properties for employeeapp-employee-v1-delete
messaging.retry.retry-policy.retryPeriod.employeeapp-employee-v1-delete=1800
messaging.retry.retry-policy.retryableExceptions.employeeapp-employee-v1-delete=java.lang.Exception
messaging.retry.retry-policy.retryableExceptionsTraverseCauses.employeeapp-employee-v1-delete=true

# Back off policy properties for employeeapp-employee-v1-add
messaging.retry.back-off-policy.retryReEnqueueDelay.employeeapp-employee-v1-add=1000
messaging.retry.back-off-policy.retryDelay.employeeapp-employee-v1-add=600000
messaging.retry.back-off-policy.retryDelayMultiplier.employeeapp-employee-v1-add=1.0
messaging.retry.back-off-policy.retryMaxDelay.employeeapp-employee-v1-add=600000
messaging.retry.back-off-policy.retryCount.employeeapp-employee-v1-add=2

# Retry policy properties for employeeapp-employee-v1-add
messaging.retry.retry-policy.retryPeriod.employeeapp-employee-v1-add=1800
messaging.retry.retry-policy.retryableExceptions.employeeapp-employee-v1-add=java.lang.Exception
messaging.retry.retry-policy.retryableExceptionsTraverseCauses.employeeapp-employee-v1-add=true


#devon4j-jwt-auth
# location of the keystore file, can be any spring resource (such as file or classpath URIs)
security.keystore.location=classpath:config/keystore.p12
# type of keystore e.g. "PKCS12" (recommended), "JKS", or "JCEKS"
security.keystore.type=PKCS12
# password the keystore is secured with. Consider using password encryption as described in devon4j configuration guide
security.keystore.password=password
# the algorithm for encryption/decryption and signing - see io.jsonwebtoken.SignatureAlgorithm
security.authentication.jwt.algorithm=RS256
# alias of public/private key in keystore (for validation only public key is used, for creation private key is required)
security.authentication.jwt.alias=1
# the following properties are used if you are validating JWTs (e.g. via JwtAuthenticationFilter)
security.authentication.jwt.validation.expiration-required=false
security.authentication.jwt.validation.max-validity=42h
security.authentication.jwt.validation.not-before-required=false
# the following properties are only used if you are issuing JWTs (e.g. via JwtLoginFilter)
security.authentication.jwt.creation.add-issued-at=true
security.authentication.jwt.creation.validity=4h
security.authentication.jwt.creation.not-before-delay=1m
